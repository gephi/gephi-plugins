/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.gephi.plugins.myplugin;

import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.util.Exceptions;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;

import pack.pack.App;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
        dtd = "-//org.gephi.plugins.myplugin//TwitterBrowserImporter//EN",
        autostore = false
)
@TopComponent.Description(
        preferredID = "TwitterBrowserImporterTopComponent",
        //iconBase="SET/PATH/TO/ICON/HERE", 
        persistenceType = TopComponent.PERSISTENCE_ALWAYS
)
@TopComponent.Registration(mode = "explorer", openAtStartup = true)
@ActionID(category = "Window", id = "org.gephi.plugins.myplugin.TwitterBrowserImporterTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(
        displayName = "#CTL_TwitterBrowserImporterAction",
        preferredID = "TwitterBrowserImporterTopComponent"
)
@Messages({
    "CTL_TwitterBrowserImporterAction=TwitterBrowserImporter",
    "CTL_TwitterBrowserImporterTopComponent=TwitterBrowserImporter Window",
    "HINT_TwitterBrowserImporterTopComponent=This is a TwitterBrowserImporter window"
})
public final class TwitterBrowserImporterTopComponent extends TopComponent {

    public TwitterBrowserImporterTopComponent() {
        initComponents();
        setName(Bundle.CTL_TwitterBrowserImporterTopComponent());
        setToolTipText(Bundle.HINT_TwitterBrowserImporterTopComponent());
        putClientProperty(TopComponent.PROP_MAXIMIZATION_DISABLED, Boolean.TRUE);
        putClientProperty(TopComponent.PROP_UNDOCKING_DISABLED, Boolean.TRUE);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        button1 = new java.awt.Button();
        button2 = new java.awt.Button();
        button3 = new java.awt.Button();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setText(org.openide.util.NbBundle.getMessage(TwitterBrowserImporterTopComponent.class, "TwitterBrowserImporterTopComponent.jTextArea1.text")); // NOI18N
        jScrollPane1.setViewportView(jTextArea1);

        button1.setLabel(org.openide.util.NbBundle.getMessage(TwitterBrowserImporterTopComponent.class, "TwitterBrowserImporterTopComponent.button1.label")); // NOI18N
        button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button1ActionPerformed(evt);
            }
        });

        button2.setLabel(org.openide.util.NbBundle.getMessage(TwitterBrowserImporterTopComponent.class, "TwitterBrowserImporterTopComponent.button2.label")); // NOI18N
        button2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button2ActionPerformed(evt);
            }
        });

        button3.setLabel(org.openide.util.NbBundle.getMessage(TwitterBrowserImporterTopComponent.class, "TwitterBrowserImporterTopComponent.button3.label")); // NOI18N
        button3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addComponent(button1, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(button2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(button3, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 176, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(button1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button1ActionPerformed
        // TODO add your handling code here:
        //GET LIKES
        
        String s = jTextArea1.getText();
        
        String[] s_vec = {s, "2"};
        
        String s_fin = "Graph Saved At: ";
        
        try {
            s_fin = s_fin + App.main(s_vec);
        } catch (InterruptedException ex) {
            Exceptions.printStackTrace(ex);
        }
        
        jTextArea1.setText(s_fin);
    }//GEN-LAST:event_button1ActionPerformed

    private void button3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button3ActionPerformed
        // TODO add your handling code here:
        //GET COMMENTS
        
        String s = jTextArea1.getText();

        String[] s_vec = {s, "1"};
        
        String s_fin = "Graph Saved At: ";
        
        try {
            s_fin = s_fin + App.main(s_vec);
        } catch (InterruptedException ex) {
            Exceptions.printStackTrace(ex);
        }
        
        jTextArea1.setText(s_fin);
    }//GEN-LAST:event_button3ActionPerformed

    private void button2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button2ActionPerformed
        // TODO add your handling code here:
        //GET RETWEETS
        
        String s = jTextArea1.getText();

        String[] s_vec = {s, "3"};
        
        String s_fin = "Graph Saved At: ";
        
        try {
            s_fin = s_fin + App.main(s_vec);
        } catch (InterruptedException ex) {
            Exceptions.printStackTrace(ex);
        }
        
        jTextArea1.setText(s_fin);
    }//GEN-LAST:event_button2ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button button1;
    private java.awt.Button button2;
    private java.awt.Button button3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }
}
